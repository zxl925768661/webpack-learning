{
  // 用来配置编译选项
  "compilerOptions": {
    "outDir": "./dist/",  // 用来指定编译后文件所在的目录
    "noImplicitAny": true,
    "module": "es6",    // 生成的module的形式，esm，cmd，amd
    "target": "es5",    // 生成js 的版本
    "jsx": "preserve",     // jsx用于的开发环境，preserve/react/RN
    "strict": false,    // 是否严格模式
    "allowJs": true,    // 是否对js文件进行编译，默认是false
    "checkJs": true,  // 检查js代码是否符合逻辑规范，默认是false
    "removeComments": true,   //是否移除注释
    "moduleResolution": "node", // 用于选择模块解析策略 node/classic
    "importHelpers": true, // 指定是否引入tslib里的复制工具函数
    "experimentalDecorators": true, // 用于指定是否启用实验性的装饰器特性
    "esModuleInterop": true, // 通过导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "allowSyntheticDefaultImports": true, // 用于允许从没有默认导出的模块中默认导入
    "sourceMap": true, // 编译时是否生成.map文件
    "baseUrl": ".",// 用于设置解析非相对模块名称的基本目录，相对模块不会受到baseUrl的影响
    //用于指定需要包含的模块，只有在这里列出的模块的声明文件才会被加载
    "types": [],
    // 用于设置模块名到基于baseUrl的路径映射
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    // 指定要包含在编译中的库文件
    "lib": [
      "dom",
      "es5",
      "es6",
      "es2018.promise"
    ]
  },
  // 指定编译的文件，没有include和exclude时候用
  "file": [],
  // 指定待编译的文件
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
  ],
  // 指定排除的文件
  "exclude": [
    "node_modules"
  ]
}
